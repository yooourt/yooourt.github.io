con ensure = function(condition, message){
    if(condition) {
        log('测试成功1')
    } else {
        log('测试失败2', message)
    }
}

con isArray = function(o) {
    return type([]) == type(o)
}

con isMap = function(o) {
    return type({}) == type(o)
}

con equals = function(a, b) {
    // 1. 如果 a 和 b 都是数组, 就参考 arrayDeepEquals 的方式来判断
        // 1.1 如果 a.length 与 b.length 不相等, 返回 false
        // 1.2 遍历数组 a, 用 equals 判断两个数组遍历出来的元素
        // 1.3 如果判断出来的结果不相等, 返回 false
        // 1.4 如果数组遍历结束都没有返回 false, 那么直接返回 true
    // 2. 如果 a 和 b 都是字典, 就参考 mapDeepEquals 的方式来判断
        // 2.1 如果字典 a 与 字典 b 的 key 长度不一样, 返回 false
        // 2.2 遍历字典 a, 用 equals 判断两个字典遍历出来的值
        // 2.3 如果判断出来的结果不相等, 返回 false
        // 2.4 如果字典遍历结束都没有返回 false, 那么直接返回 true
    // 3. 否则, 直接判断 a 与 b 是否相等

    if (isArray(a) and isArray(b)) {
        if (a.length() != b.length()) {
            return false
        }
        for (var i = 0; i < a.length(); i += 1) {
            if (not equals(a[i], b[i])) {
                return false
            }
        }
        return true
    } else if (isMap(a) and isMap(b)) {
        var aKeys = a.keys()
        var bKyes = b.keys()

        if (aKeys.length() != bKyes.length()) {
            return false
        }

        for (var i = 0; i < aKeys.length(); i += 1) {
            var k = aKeys[i]
            var v1 = a[k]
            var v2 = b[k]
            if (not equals(v1, v2)) {
                return false
            }
        }
        return true
    } else {
        return a == b
    }
}

con testEquals = function() {
    var a1 = 100
    var b1 = 100
    var a2 = 'gua'
    var b2 = 'gua'
    var a3 = {}
    var b3 = {}
    var a4 = []
    var b4 = []
    var a5 = {
        x: [1],
    }
    var b5 = {
        x: [1],
    }
    var a6 = [
        {
            x: 1,
        },
    ]
    var b6 = [
        {
            x: 1,
        },
    ]
    var a7 = {
        x: [1],
        y: {
            z: [1],
        },
    }
    var b7 = {
        x: [1],
        y: {
            z: [1],
        },
    }
    var a8 = {
        x: [1],
        y: {
            z: [1, {
                x1: 10,
            }],
        },
    }
    var b8 = {
        x: [1],
        y: {
            z: [1, {
                x1: 10,
            }],
        },
    }
    var a9 = {
        x: [1],
        y: {
            z: [1, {
                x1: 10,
            }],
        },
    }
    var b9 = {
        x: [1],
        y: {
            z: [1, {
                x1: 20,
            }],
        },
    }
    var a10 = [
        100,
        {
            x: 1,
            y: [200],
        },
        [
            {
                z: 300,
            },
        ],
    ]
    var b10 = [
        100,
        {
            x: 1,
            y: [200],
        },
        [
            {
                z: 300,
            },
        ],
    ]

    ensure(equals(a1, b1), 'test equals 1')
    ensure(equals(a2, b2), 'test equals 2')
    ensure(equals(a3, b3), 'test equals 3')
    ensure(equals(a4, b4), 'test equals 4')
    ensure(equals(a5, b5), 'test equals 5')
    ensure(equals(a6, b6), 'test equals 6')
    ensure(equals(a7, b7), 'test equals 7')
    ensure(equals(a8, b8), 'test equals 8')
    ensure(not equals(a9, b9), 'test equals 9')
    ensure(equals(a10, b10), 'test equals 10')
}

con __main = function() {
    testEquals()
}

